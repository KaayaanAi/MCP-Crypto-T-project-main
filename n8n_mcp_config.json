{
  "name": "MCP Crypto Trading Client",
  "displayName": "Crypto Trading Analysis",
  "description": "Advanced cryptocurrency trading analysis with institutional indicators and portfolio monitoring",
  "version": "2.0.0",
  "defaults": {
    "name": "Crypto Trading",
    "color": "#F7931A"
  },
  "inputs": ["main"],
  "outputs": ["main"],
  "credentials": [],
  "properties": [
    {
      "displayName": "MCP Server Command",
      "name": "command",
      "type": "string",
      "default": "python3 /app/mcp_server_standalone.py",
      "description": "Command to start the MCP crypto trading server",
      "required": true
    },
    {
      "displayName": "Working Directory", 
      "name": "cwd",
      "type": "string",
      "default": "/app",
      "description": "Working directory for the MCP server",
      "required": true
    },
    {
      "displayName": "Tool Name",
      "name": "tool",
      "type": "options",
      "options": [
        {
          "name": "Analyze Cryptocurrency",
          "value": "analyze_crypto",
          "description": "Advanced technical analysis with institutional indicators"
        },
        {
          "name": "Monitor Portfolio", 
          "value": "monitor_portfolio",
          "description": "Real-time portfolio monitoring and risk assessment"
        },
        {
          "name": "Detect Opportunities",
          "value": "detect_opportunities", 
          "description": "AI-powered trading opportunity detection"
        },
        {
          "name": "Risk Assessment",
          "value": "risk_assessment",
          "description": "Position sizing and comprehensive risk metrics"
        },
        {
          "name": "Market Scanner",
          "value": "market_scanner",
          "description": "Scan for breakouts, reversals, and institutional moves"
        },
        {
          "name": "Alert Manager",
          "value": "alert_manager", 
          "description": "Configure and manage trading alerts via WhatsApp"
        },
        {
          "name": "Historical Backtest",
          "value": "historical_backtest",
          "description": "Test trading strategies against historical data"
        }
      ],
      "default": "analyze_crypto",
      "required": true,
      "description": "Select the trading analysis tool to execute"
    },
    {
      "displayName": "Tool Arguments",
      "name": "arguments", 
      "type": "json",
      "default": {
        "symbol": "BTCUSDT",
        "timeframe": "1h"
      },
      "description": "Arguments for the selected tool (JSON format)",
      "required": true
    }
  ],
  "mcpConfig": {
    "transport": "stdio",
    "command": "python3 /app/mcp_server_standalone.py",
    "args": [],
    "cwd": "/app",
    "env": {
      "PYTHONPATH": "/app",
      "PYTHONUNBUFFERED": "1", 
      "MCP_SERVER_NAME": "crypto-trading",
      "ENVIRONMENT": "production",
      "TZ": "Asia/Kuwait"
    },
    "timeout": 30000,
    "retries": 3,
    "retryDelay": 1000
  },
  "toolSchemas": {
    "analyze_crypto": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string",
          "description": "Trading pair symbol (e.g., BTCUSDT)",
          "pattern": "^[A-Z]{6,12}$",
          "examples": ["BTCUSDT", "ETHUSDT", "ADAUSDT"]
        },
        "timeframe": {
          "type": "string", 
          "default": "1h",
          "enum": ["1m", "5m", "15m", "1h", "4h", "1d"],
          "description": "Analysis timeframe"
        },
        "comparison_symbol": {
          "type": "string",
          "description": "Optional comparison symbol",
          "pattern": "^[A-Z]{6,12}$"
        },
        "save_analysis": {
          "type": "boolean",
          "default": true,
          "description": "Save analysis to database"
        }
      },
      "required": ["symbol"],
      "additionalProperties": false
    },
    "monitor_portfolio": {
      "type": "object", 
      "properties": {
        "portfolio_id": {
          "type": "string",
          "description": "Portfolio identifier",
          "minLength": 1,
          "maxLength": 50
        },
        "symbols": {
          "type": "array",
          "items": {"type": "string", "pattern": "^[A-Z]{6,12}$"},
          "description": "List of symbols to monitor",
          "minItems": 1,
          "maxItems": 50
        },
        "risk_level": {
          "type": "string",
          "enum": ["conservative", "moderate", "aggressive"],
          "default": "moderate",
          "description": "Risk tolerance level"
        }
      },
      "required": ["portfolio_id", "symbols"],
      "additionalProperties": false
    },
    "detect_opportunities": {
      "type": "object",
      "properties": {
        "market_cap_range": {
          "type": "string",
          "enum": ["large", "mid", "small", "all"],
          "default": "all",
          "description": "Market capitalization range to scan"
        },
        "confidence_threshold": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "default": 70,
          "description": "Minimum confidence threshold for opportunities"
        },
        "max_results": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 10,
          "description": "Maximum number of opportunities to return"
        }
      },
      "additionalProperties": false
    },
    "risk_assessment": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string",
          "description": "Trading symbol",
          "pattern": "^[A-Z]{6,12}$"
        },
        "portfolio_value": {
          "type": "number",
          "minimum": 100,
          "description": "Total portfolio value"
        },
        "risk_percentage": {
          "type": "number",
          "minimum": 0.1,
          "maximum": 20,
          "default": 2.0,
          "description": "Risk percentage per trade"
        },
        "entry_price": {
          "type": "number",
          "minimum": 0,
          "description": "Planned entry price"
        },
        "stop_loss": {
          "type": "number", 
          "minimum": 0,
          "description": "Stop loss price"
        }
      },
      "required": ["symbol", "portfolio_value", "entry_price", "stop_loss"],
      "additionalProperties": false
    },
    "market_scanner": {
      "type": "object",
      "properties": {
        "scan_type": {
          "type": "string",
          "enum": ["breakouts", "reversals", "institutional", "volume_surge", "all"],
          "default": "all",
          "description": "Type of patterns to scan for"
        },
        "timeframe": {
          "type": "string",
          "enum": ["1m", "5m", "15m", "1h", "4h", "1d"],
          "default": "1h",
          "description": "Scanning timeframe"
        },
        "min_volume_usd": {
          "type": "number",
          "minimum": 10000,
          "default": 1000000,
          "description": "Minimum 24h volume in USD"
        }
      },
      "additionalProperties": false
    },
    "alert_manager": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": ["create", "update", "delete", "list"],
          "description": "Alert management action"
        },
        "alert_type": {
          "type": "string",
          "enum": ["price", "technical", "volume", "news"],
          "description": "Type of alert to create"
        },
        "symbol": {
          "type": "string",
          "pattern": "^[A-Z]{6,12}$",
          "description": "Trading symbol"
        },
        "condition": {
          "type": "string",
          "description": "Alert condition (e.g., 'price > 50000')",
          "maxLength": 200
        },
        "phone_number": {
          "type": "string",
          "pattern": "^\\+[1-9]\\d{7,14}$",
          "description": "WhatsApp phone number in international format"
        }
      },
      "required": ["action"],
      "additionalProperties": false
    },
    "historical_backtest": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string",
          "description": "Trading symbol",
          "pattern": "^[A-Z]{6,12}$"
        },
        "strategy": {
          "type": "string",
          "description": "Strategy configuration",
          "maxLength": 1000
        },
        "start_date": {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
          "description": "Backtest start date (YYYY-MM-DD)"
        },
        "end_date": {
          "type": "string", 
          "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
          "description": "Backtest end date (YYYY-MM-DD)"
        },
        "initial_capital": {
          "type": "number",
          "minimum": 1000,
          "default": 10000,
          "description": "Initial capital for backtesting"
        }
      },
      "required": ["symbol", "strategy", "start_date", "end_date"],
      "additionalProperties": false
    }
  }
}