# Production Dockerfile for MCP Crypto Trading Server
# Optimized for Kaayaan infrastructure deployment
# Last updated: 2025-08-31

FROM python:3.12-slim AS base

# Metadata
LABEL maintainer="Kaayaan Infrastructure <admin@kaayaan.ai>"
LABEL version="2.0.0"
LABEL description="MCP Crypto Trading Analysis Server - Production Ready"

# System packages and security updates
RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    g++ \
    make \
    pkg-config \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create app user for security
RUN groupadd -r mcpuser && useradd -r -g mcpuser mcpuser

# Set work directory
WORKDIR /app

# Copy requirements first for better Docker layer caching
COPY requirements_mcp.txt .

# Install Python dependencies with security and performance optimizations
RUN pip install --no-cache-dir --upgrade pip==24.2 && \
    pip install --no-cache-dir --no-deps -r requirements_mcp.txt && \
    pip install --no-cache-dir uv==0.2.26 && \
    rm -rf ~/.cache/pip

# Copy application source
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/cache && \
    chown -R mcpuser:mcpuser /app

# Switch to non-root user
USER mcpuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python3 -c "import asyncio; from infrastructure.kaayaan_factory import quick_health_check; asyncio.run(quick_health_check())" || exit 1

# Environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV MCP_SERVER_NAME=crypto-trading
ENV MCP_VERSION=2.0.0
ENV TZ=Asia/Kuwait

# Expose MCP stdio interface (no network ports)
# The server runs on stdio protocol for MCP communication

# Production startup command
CMD ["python3", "mcp_server_standalone.py"]

# Multi-stage build for production optimization
FROM base AS production

# Production-specific optimizations
RUN python3 -m compileall -b /app && \
    find /app -name "*.py" -delete && \
    find /app -name "*.pyc" -exec chmod 555 {} \;

# Final production image
FROM python:3.12-slim AS final

# Copy only compiled bytecode for production
COPY --from=production /app /app
COPY --from=base /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages

# Set up production user
RUN groupadd -r mcpuser && useradd -r -g mcpuser mcpuser
RUN chown -R mcpuser:mcpuser /app

USER mcpuser
WORKDIR /app

# Production environment
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV ENVIRONMENT=production
ENV TZ=Asia/Kuwait

# Production startup
CMD ["python3", "-O", "mcp_server_standalone.py"]